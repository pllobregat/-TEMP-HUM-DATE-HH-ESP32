# Rui Santos & Sara Santos - Random Nerd Tutorials
# Detalls complets del projecte a https://RandomNerdTutorials.com/micropython-i2c-lcd-esp32-esp8266/

from machine import Pin, SoftI2C
from machine_i2c_lcd import I2cLcd
from machine import RTC
from time import sleep
import dht
import esp
esp.osdebug(None)

# Inicialitzem el sensor DHT22 al pin GPIO15
sensor = dht.DHT22(Pin(15))

# Definim l'adreça I2C i les dimensions de la pantalla LCD
I2C_ADDR = 0x27
I2C_NUM_ROWS = 2
I2C_NUM_COLS = 16

# Inicialitzem la comunicació I2C i la pantalla LCD
i2c = SoftI2C(sda=Pin(21), scl=Pin(22), freq=400000)

# Per ESP8266, descomenta la línia següent
# i2c = SoftI2C(sda=Pin(4), scl=Pin(5), freq=400000)

lcd = I2cLcd(i2c, I2C_ADDR, I2C_NUM_ROWS, I2C_NUM_COLS)

# Missatge inicial a la pantalla
lcd.putstr("Funciona :)")
sleep(4)

# Funció per obtenir la data i hora del rellotge intern (RTC)
def getRtcTime():
    rtc = RTC()
    # rtc.datetime((2024, 10, 25, 0, 12, 15, 0, 0)) # per establir una data/hora específica
    yr, mon, day, dow, hor, minute, sec, ms = rtc.datetime()
    return yr, mon, day, hor, minute

# Funció per llegir la temperatura i humitat amb decimals
def read_sensor():
    try:
        sensor.measure()
        temp = "{:.1f} C".format(sensor.temperature())
        hum = "{:.1f} %".format(sensor.humidity())
        return temp, hum
    except OSError as e:
        return 'Error lectura sensor.', 'N/A'

# Bucle principal
try:
    while True:
        temp, hum = read_sensor()
        dy, dm, dd, dh, dmin = getRtcTime()

        # Formatem l'hora amb zeros davant si cal
        tstring = ["{:02d}".format(dh), "{:02d}".format(dmin)]
        dstring = ["{:02d}".format(dd), "{:02d}".format(dm), str(dy)]

        date = '/'.join(dstring)
        time = ':'.join(tstring)

        # Mostrem temperatura i humitat
        lcd.clear()
        lcd.putstr("Temp.: " + temp)
        lcd.move_to(0, 1)
        lcd.putstr("Humitat: " + hum)
        sleep(2)

        # Mostrem data i hora
        lcd.clear()
        lcd.putstr(date)
        lcd.move_to(0, 1)
        lcd.putstr(time)
        sleep(2)

# Si s'interromp amb Ctrl+C
except KeyboardInterrupt:
    print("Interrupció per teclat")
    lcd.backlight_off()
    lcd.display_off()
